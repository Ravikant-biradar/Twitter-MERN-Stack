{"ast":null,"code":"function timeAgo(timestamp) {\n  const date = new Date(timestamp);\n  const now = new Date();\n\n  // Calculate the difference in milliseconds\n  const diff = now - date;\n\n  // Convert the difference to seconds\n  const seconds = Math.floor(diff / 1000);\n\n  // Define time periods in seconds\n  const minute = 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const month = day * 30;\n  const year = day * 365;\n\n  // Determine the appropriate time period\n  if (seconds < minute) {\n    return seconds + \" seconds ago\";\n  } else if (seconds < hour) {\n    const minutes = Math.floor(seconds / minute);\n    return minutes + (minutes === 1 ? \" minute ago\" : \" minutes ago\");\n  } else if (seconds < day) {\n    const hours = Math.floor(seconds / hour);\n    return hours + (hours === 1 ? \" hour ago\" : \" hours ago\");\n  } else if (seconds < month) {\n    const days = Math.floor(seconds / day);\n    return days + (days === 1 ? \" day ago\" : \" days ago\");\n  } else if (seconds < year) {\n    const months = Math.floor(seconds / month);\n    return months + (months === 1 ? \" month ago\" : \" months ago\");\n  } else {\n    const years = Math.floor(seconds / year);\n    return years + (years === 1 ? \" year ago\" : \" years ago\");\n  }\n}\nexport default timeAgo;","map":{"version":3,"names":["timeAgo","timestamp","date","Date","now","diff","seconds","Math","floor","minute","hour","day","month","year","minutes","hours","days","months","years"],"sources":["C:/Users/Chandrakant Biradar/OneDrive/Desktop/twitter front-end/my-home/src/Time.js"],"sourcesContent":["function timeAgo(timestamp) {\r\n  const date = new Date(timestamp);\r\n  const now = new Date();\r\n  \r\n  // Calculate the difference in milliseconds\r\n  const diff = now - date;\r\n  \r\n  // Convert the difference to seconds\r\n  const seconds = Math.floor(diff / 1000);\r\n  \r\n  // Define time periods in seconds\r\n  const minute = 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const month = day * 30;\r\n  const year = day * 365;\r\n  \r\n  // Determine the appropriate time period\r\n  if (seconds < minute) {\r\n    return seconds + \" seconds ago\";\r\n  } else if (seconds < hour) {\r\n    const minutes = Math.floor(seconds / minute);\r\n    return minutes + (minutes === 1 ? \" minute ago\" : \" minutes ago\");\r\n  } else if (seconds < day) {\r\n    const hours = Math.floor(seconds / hour);\r\n    return hours + (hours === 1 ? \" hour ago\" : \" hours ago\");\r\n  } else if (seconds < month) {\r\n    const days = Math.floor(seconds / day);\r\n    return days + (days === 1 ? \" day ago\" : \" days ago\");\r\n  } else if (seconds < year) {\r\n    const months = Math.floor(seconds / month);\r\n    return months + (months === 1 ? \" month ago\" : \" months ago\");\r\n  } else {\r\n    const years = Math.floor(seconds / year);\r\n    return years + (years === 1 ? \" year ago\" : \" years ago\");\r\n  }\r\n}\r\n\r\nexport default timeAgo\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,OAAOA,CAACC,SAAS,EAAE;EAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChC,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;;EAEtB;EACA,MAAME,IAAI,GAAGD,GAAG,GAAGF,IAAI;;EAEvB;EACA,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,CAAC;;EAEvC;EACA,MAAMI,MAAM,GAAG,EAAE;EACjB,MAAMC,IAAI,GAAGD,MAAM,GAAG,EAAE;EACxB,MAAME,GAAG,GAAGD,IAAI,GAAG,EAAE;EACrB,MAAME,KAAK,GAAGD,GAAG,GAAG,EAAE;EACtB,MAAME,IAAI,GAAGF,GAAG,GAAG,GAAG;;EAEtB;EACA,IAAIL,OAAO,GAAGG,MAAM,EAAE;IACpB,OAAOH,OAAO,GAAG,cAAc;EACjC,CAAC,MAAM,IAAIA,OAAO,GAAGI,IAAI,EAAE;IACzB,MAAMI,OAAO,GAAGP,IAAI,CAACC,KAAK,CAACF,OAAO,GAAGG,MAAM,CAAC;IAC5C,OAAOK,OAAO,IAAIA,OAAO,KAAK,CAAC,GAAG,aAAa,GAAG,cAAc,CAAC;EACnE,CAAC,MAAM,IAAIR,OAAO,GAAGK,GAAG,EAAE;IACxB,MAAMI,KAAK,GAAGR,IAAI,CAACC,KAAK,CAACF,OAAO,GAAGI,IAAI,CAAC;IACxC,OAAOK,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAG,WAAW,GAAG,YAAY,CAAC;EAC3D,CAAC,MAAM,IAAIT,OAAO,GAAGM,KAAK,EAAE;IAC1B,MAAMI,IAAI,GAAGT,IAAI,CAACC,KAAK,CAACF,OAAO,GAAGK,GAAG,CAAC;IACtC,OAAOK,IAAI,IAAIA,IAAI,KAAK,CAAC,GAAG,UAAU,GAAG,WAAW,CAAC;EACvD,CAAC,MAAM,IAAIV,OAAO,GAAGO,IAAI,EAAE;IACzB,MAAMI,MAAM,GAAGV,IAAI,CAACC,KAAK,CAACF,OAAO,GAAGM,KAAK,CAAC;IAC1C,OAAOK,MAAM,IAAIA,MAAM,KAAK,CAAC,GAAG,YAAY,GAAG,aAAa,CAAC;EAC/D,CAAC,MAAM;IACL,MAAMC,KAAK,GAAGX,IAAI,CAACC,KAAK,CAACF,OAAO,GAAGO,IAAI,CAAC;IACxC,OAAOK,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAG,WAAW,GAAG,YAAY,CAAC;EAC3D;AACF;AAEA,eAAelB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}